import { chromium } from 'playwright';

async function registerSentry() {
  const browser = await chromium.launch({ headless: false }); // –ü–æ–∫–∞–∑–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä
  const context = await browser.newContext();
  const page = await context.newPage();

  try {
    console.log('üöÄ –û—Ç–∫—Ä—ã–≤–∞–µ–º Sentry.io...');
    await page.goto('https://sentry.io');

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForLoadState('networkidle');

    // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É Sign Up
    console.log('üìù –ò—â–µ–º –∫–Ω–æ–ø–∫—É Sign Up...');
    const signupButton = await page.locator('a[href*="/auth/signup/"], button:has-text("Sign Up"), a:has-text("Sign Up")').first();
    await signupButton.click();

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    await page.waitForLoadState('networkidle');

    // –í—ã–±–∏—Ä–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ email
    console.log('üìß –í—ã–±–∏—Ä–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ email...');
    const emailSignup = await page.locator('button:has-text("Sign up with email"), a:has-text("Continue with email")').first();
    if (await emailSignup.isVisible()) {
      await emailSignup.click();
    }

    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
    console.log('‚úçÔ∏è –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...');

    // –ò–º—è
    await page.waitForSelector('input[name="name"], input[name="firstName"], input[id*="name"], input[placeholder*="name"]', { timeout: 10000 });
    const nameInput = await page.locator('input[name="name"], input[name="firstName"], input[id*="name"], input[placeholder*="name"]').first();
    await nameInput.fill('FlyProx Developer');

    // Email
    const emailInput = await page.locator('input[name="email"], input[type="email"], input[id*="email"], input[placeholder*="email"]').first();
    await emailInput.fill(`flyprodev${Date.now()}@example.com`);

    // –ü–∞—Ä–æ–ª—å
    const passwordInput = await page.locator('input[name="password"], input[type="password"], input[id*="password"], input[placeholder*="password"]').first();
    await passwordInput.fill('SecurePassword123!');

    // –ö–æ–º–ø–∞–Ω–∏—è/–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
    const companyInput = await page.locator('input[name="company"], input[name="organization"], input[placeholder*="company"]').first();
    if (await companyInput.isVisible()) {
      await companyInput.fill('FlyProx');
    }

    // –ü—Ä–∏–Ω–∏–º–∞–µ–º —É—Å–ª–æ–≤–∏—è
    console.log('‚úÖ –ü—Ä–∏–Ω–∏–º–∞–µ–º —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è...');
    const termsCheckbox = await page.locator('input[type="checkbox"]').first();
    if (await termsCheckbox.isVisible()) {
      await termsCheckbox.check();
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
    console.log('üì§ –°–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç...');
    const submitButton = await page.locator('button[type="submit"], button:has-text("Create"), button:has-text("Sign Up"), button:has-text("Continue")').last();
    await submitButton.click();

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
    await page.waitForTimeout(3000);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–∞–ø—á—É
    const captchaVisible = await page.locator('[class*="captcha"], [id*="captcha"], iframe[title*="recaptcha"]').isVisible().catch(() => false);
    if (captchaVisible) {
      console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ CAPTCHA! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ –µ—ë –≤—Ä—É—á–Ω—É—é –≤ –±—Ä–∞—É–∑–µ—Ä–µ...');
      // –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫–∞–ø—á–∏
      await page.waitForTimeout(30000);
    }

    // –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∂–¥–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
    console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...');
    await page.waitForURL(/\/welcome|\/setup|\/organizations\/create/, { timeout: 30000 }).catch(() => {});

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç
    console.log('üèóÔ∏è –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç...');

    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    const createProjectButton = await page.locator('button:has-text("Create Project"), a:has-text("New Project"), [data-test-id="create-project"]').first();
    if (await createProjectButton.isVisible()) {
      await createProjectButton.click();
    }

    // –í—ã–±–∏—Ä–∞–µ–º Node.js
    console.log('üì¶ –í—ã–±–∏—Ä–∞–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É Node.js...');
    await page.waitForSelector('text=Node.js', { timeout: 10000 });
    await page.locator('text=Node.js').first().click();

    // –í–≤–æ–¥–∏–º –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞
    console.log('üè∑Ô∏è –í–≤–æ–¥–∏–º –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞...');
    const projectNameInput = await page.locator('input[name="name"], input[placeholder*="project"], input[id*="project-name"]').first();
    if (await projectNameInput.isVisible()) {
      await projectNameInput.fill('flyprox-backend');
    }

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç
    const createButton = await page.locator('button:has-text("Create Project"), button:has-text("Create"), button[type="submit"]').last();
    await createButton.click();

    // –ñ–¥–µ–º –ø–æ–ª—É—á–µ–Ω–∏—è DSN
    console.log('üîë –ñ–¥–µ–º –ø–æ–ª—É—á–µ–Ω–∏—è DSN –∫–ª—é—á–∞...');
    await page.waitForTimeout(5000);

    // –ò—â–µ–º DSN
    const dsnElement = await page.locator('code:has-text("https://"), [data-test-id="dsn"], .api-key, pre').first();
    const dsnText = await dsnElement.textContent().catch(() => null);

    if (dsnText && dsnText.includes('https://')) {
      console.log('\n‚úÖ –£–°–ü–ï–•! DSN –∫–ª—é—á –ø–æ–ª—É—á–µ–Ω:');
      console.log('================================');
      console.log(dsnText.trim());
      console.log('================================');

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º DSN –≤ —Ñ–∞–π–ª
      await page.evaluate((dsn) => {
        localStorage.setItem('sentry_dsn', dsn);
      }, dsnText.trim());

      // –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
      const fs = await import('fs');
      fs.writeFileSync('.env', `SENTRY_DSN=${dsnText.trim()}\n`);
      console.log('\nüìÅ DSN —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª .env');

    } else {
      console.log('\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ DSN –∫–ª—é—á. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –µ–≥–æ –≤—Ä—É—á–Ω—É—é –≤ –¥–∞—à–±–æ—Ä–¥–µ Sentry.');
    }

    console.log('\nüéâ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—Å—Ç–∞–≤—å—Ç–µ –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');

    // –ù–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Å—Ä–∞–∑—É
    await page.waitForTimeout(10000);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.log('\nüí° –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ.');
    await page.waitForTimeout(30000);
  }

  await browser.close();
}

registerSentry().catch(console.error);